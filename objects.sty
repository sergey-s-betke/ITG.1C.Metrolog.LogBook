\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{objects}[2014/11/06 v0.1 objects and properties]

\ProcessOptions\relax

\def\@make@csname#1{%
	\@gobble@backslashchar#1%
}

\def\@gobble@backslashchar#1{%
	\expandafter\@gobble@backslashchar@@\string#1%
}
\def\@gobble@backslashchar@@#1{%
	\expandafter\ifx\@backslashchar#1\else#1\fi%
}

\def\@object@this{}

\def\@object@this@set#1{\edef\@object@this{#1}}

\def\@object@member@id#1#2{#1@\@gobble@backslashchar#2}
\def\@object@this@member@id#1{\@object@member@id{\@object@this}{#1}}

\def\@object@item@id#1[#2]{#1@#2}
\def\@object@this@item@id[#1]{\@object@item@id{\@object@this}[#1]}

\def\@object@class@prototype#1{%
	\@object@this@set{#1}%
	\@object@this@method@new{@*}##1{%
		\noexpand\@object@member@invoke{\@object@this}{##1}%
	}%
	\@object@this@method@new{let}##1{%
		\def##1{%
			\noexpand\@object@method@call{\@object@this}{@*}%
		}%
	}%
	\@object@this@method@new{ifexists}##1{%
		\noexpand\@object@property@ifexists{\@object@this}{##1}%
	}%
	\@object@this@method@new{ifdefined}##1{%
		\noexpand\@object@property@ifdefined{\@object@this}{##1}%...
	}%
}

\def\@object@class@id#1{%
	@object@class@constructor@@\@gobble@backslashchar#1%
}

% #1 - class name
% ... #2 - instance name
% ... #3 - definition code
\def\@object@class@constructor#1{%
	\@ifundefined{\@object@class@id#1}{%
		\PackageError{objects}{Class \string#1 doesn't exists.}\@ehd%
		\def\reserved@a{\@gobbletwo}%
	}{%
		\expandafter\let\csname reserved@a\expandafter\endcsname\csname\@object@class@id#1\endcsname%
	}%
	\reserved@a%
}


% #1 - instance name
% #2 - class id
% #3 - class definition code
\def\@object@class@new#1#2#3{%
	% @object@class@constructor for class #2
	% ##1 - instance full internal id (not a member name)
	% ##2 - const definition code
	\expandafter\def\csname#2\endcsname##1##2{%
		{%
			\@object@class@prototype{##1}%
			#3%
			##2%
		}%
	}%
}

% #1 - type name
% #2 - type definition
\def\@object@class@def#1{%
	\@object@class@new{#1}{\@object@class@id#1}%
}

\def\@object#1{%
	\@member{#1} of class {#1}%
	\@object@class@def{#1}% ...
}

% #1 - member name
% #2 - ignore spaces before `of class`
% #3 - class name
\def\@member#1#2of class#3{%
	\expandafter\def\csname\@make@csname#1\endcsname{%
		\@object@class@constructor{#3}{\@object@this@member@id{#1}}%
	}%
}

% TODO remove obsolete \object csname
\def\object#1{%
	\@object@method@call{\@object@this@member@id{#1}}{@*}%
}

% #1 - type name
% #2 - instance name
\def\@object@class@instance@new#1#2{%
	\expandafter\edef\csname\@make@csname#2\endcsname{%
		\noexpand\@object@method@call{\@object@member@id{\@object@this}{#2}}{@*}%
	}%
	\@object@class@constructor{#1}{\@object@this@member@id{#2}}% ...
}

% #1 - const name
% #2 - ignore spaces before `of class`
% #3 - class name
\def\const#1#2of class#3{%
	\@object@class@instance@new{#3}{#1}%
}

% #1 - instance name
% #2 - item class name
\def\@object@collection@new#1#2{%
	\expandafter\newcount\csname \@object@collection@count@id{\@object@this@member@id{#1}} \endcsname%
	% item constructor
	\expandafter\def\csname\@make@csname#1\endcsname##1{
		\global\advance\csname \@object@collection@count@id{\@object@this@member@id{#1}} \endcsname by 1\relax%
		{
			\@object@this@set{\@object@this@member@id{#1}}
			{
				\@object@class@constructor{#2}{%
					\@object@this@item@id[\@object@this@collection@count]%
				}{%
					##1%
				}%
			}
		}
	}
	{
		\@object@this@set{\@object@this@member@id{#1}}
		\@object@this@method@new{for}##1[##2][##3]##4{%
			\noexpand\@object@collection@for{\@object@this}{##1}[##2][##3]{##4}%
		}%
		\@object@this@method@new{foreach}##1##2{%
			\noexpand\@object@method@call{\@object@this}{for}{##1}[][]{##2}%
		}%
		\@object@this@method@new{@*}{%
			\noexpand\@object@collection@@{\@object@this}%
		}%
		\@object@this@method@new{count}{%
			\noexpand\@object@collection@count{\@object@this}%
		}%
	}
}

\def\@object@collection@@#1{%
%	\begingroup%
		\edef\@object@ptr{#1}%
		\futurelet\@let@token\@object@collection@@@%
}%

\def\@object@collection@@@{%
		\ifx[\@let@token%
			\let\@object@collection@method\@object@collection@item@%
		\else%
			\let\@object@collection@method\@object@member@invoke%
		\fi%
%	\endgroup%
	\@object@collection@method\@object@ptr% ...
}%

\def\@object@collection@item@#1[#2]{%
	{% for restoring counters
		\@tempcnta=#2\relax%
		\@tempcntb\csname \@object@collection@count@id{#1} \endcsname\relax%
		\ifnum\@tempcnta>\@tempcntb%
			\PackageError{objects}{Index #2 out of collection #1 range. Last item index - \@object@collection@count{#1}.}\@ehd%
			\global\let\reserved@a\relax%
		\else%
			\gdef\reserved@a{\@object@method@call{\@object@item@id{#1}[#2]}{@*}}%
		\fi%
	}%
	\reserved@a% ...
}%

\def\@object@collection@count@id#1{%
	c@\@object@member@id{#1}{@count}%
}
\def\@object@this@collection@count@id{%
	\@object@collection@count@id{\@object@this}%
}
\def\@object@collection@count#1{%
	\expandafter\the\csname \@object@collection@count@id{#1} \endcsname%
}
\def\@object@this@collection@count{%
	\@object@collection@count{\@object@this}%
}

% #1 - object id
% #2 - cursor
% #3 - start index
% #4 - stop index
% #5 - loop code
\def\@object@collection@for#1#2[#3][#4]#5{%
	{%
		\def\reserved@a{#3}%
		\ifx\reserved@a\@empty%
			\@tempcnta=1\relax%
		\else%
			\expandafter\@tempcnta #3\relax%
		\fi%
		\advance\@tempcnta by -1\relax%
		%
		\def\reserved@b{#4}%
		\ifx\reserved@b\@empty%
			\@tempcntb\csname \@object@collection@count@id{#1} \endcsname\relax%
		\else%
			\expandafter\@tempcntb\reserved@b\relax%
		\fi%
		%
		\@whilesw{\ifnum\@tempcnta<\@tempcntb\relax}\fi{%
			\advance\@tempcnta by 1\relax%
			\@object@method@call%
				{\@object@item@id{#1}[\the\@tempcnta]}%
				{let}%
				#2%
			#5%
		}%
	}%
}%

% #1 - member name
% #2 - ignore spaces before `of class`
% #3 - class name
\def\@collection#1#2of class#3{%
	\@object@collection@new{#1}{#3}% ...
}

\def\@objects#1{%
	\@collection{#1} of class {#1}%
	\@object@class@def{#1}% ...
}


\def\@object@member@invoke#1#2{%
	\@ifundefined{\@object@member@id{#1}{#2}}{%
		\@ifundefined{\@object@member@id{\@object@member@id{#1}{#2}}{@*}}{%
			\PackageError{objects}{Member \string#2 doesn't exists (object id \string#1).}\@ehd%
		}{%
			\@object@method@call{\@object@member@id{#1}{#2}}{@*}%
		}%
	}{%
		\@object@method@call{#1}{#2}%
	}%
}%


\def\@object@property@set#1#2#3{%
	% отключаю проверку переопределения из-за несовместимости со значениями по умолчанию
	%\@ifundefined{\@object@this@member@id{#1}}{%
	\expandafter\xdef\csname\@object@member@id{#1}{#2}\endcsname{#3}%
	%}{%
	%	\errhelp{Команда должна быть пропущена, нажмите <return> для продолжения}%
	%	\errmessage{Переопределение значения элемента данных не допускается}%
	%}%
}
\def\@object@this@property@set#1#2{%
	\@object@property@set{\@object@this}{#1}{#2}%
}

\def\@object@property@get#1#2{%
	\expandafter\ifx\csname\@object@member@id{#1}{#2}\endcsname\relax%
		\PackageError{objects}{Property \string#2 doesn't exists (object id \string#1).}\@ehd%
	\else%
		\csname \@object@member@id{#1}{#2}\endcsname%
	\fi%
}
\def\@object@this@property@get#1{%
	\@object@property@get{\@object@this}{#1}%
}

% TODO добавить проверку определения обязательных свойств
\def\@object@this@property@new#1{%
	\expandafter\def\csname\@make@csname#1\endcsname##1{%
		\@object@this@property@set{#1}{##1}%
	}%
	\@object@method@new{\@object@this@member@id{#1}}{@*}{%
		\noexpand\@nameuse{\@object@member@id{\@object@this}{#1}}%
		%\noexpand\@object@property@get{\@object@this}{#1}% !!! выяснить, почему не работает
	}%
}

\let\@object@this@property@new@optional\@object@this@property@new
	
\def\@object@this@property@new@mandatory#1{%
	\@object@this@property@new{#1}%
	\@ifnextchar[%]
		{\@object@this@property@set@@{#1}}%
		{}%
}

\def\@object@this@property@set@@#1[#2]{%
	\@object@this@property@set{#1}{#2}%
}

\def\@property{%
	\@ifstar%
	\@object@this@property@new@optional%
	\@object@this@property@new@mandatory%
}

\newif\if@object@property@defined@

\def\@object@property@ifdefined#1#2{%
	\@ifundefined{\@object@member@id{#1}{#2}}%
		{\@object@property@defined@false}%
		{\@object@property@defined@true}%
	\if@object@property@defined@%
}

\def\@object@this@property@ifdefined#1{%
	\@object@property@defined{\@object@this}{#1}%
}

\newif\if@object@property@exists@

\def\@object@property@ifexists#1#2{%
	\@ifundefined{\@object@member@id{\@object@member@id{#1}{#2}}{@*}}%
		{\@object@property@exists@false}%
		{\@object@property@exists@true}%
	\if@object@property@exists@%
}

\def\@object@this@property@ifexists#1{%
	\@object@property@ifexists{\@object@this}{#1}%
}


\def\@object@method@new#1#2{%
	\expandafter\xdef\csname\@object@member@id{#1}{#2}\endcsname%
}
\def\@object@this@method@new#1{%
	\@object@method@new{\@object@this}{#1}%
}

\def\@object@method@call#1#2{%
	\@ifundefined{\@object@member@id{#1}{#2}}%
		{ \PackageError{objects}{Method #2 doesn't exists (object id #1).}\@ehd }%
		{\csname\@object@member@id{#1}{#2}\endcsname}%
}%
\def\@object@this@method@call#1{%
	\@object@method@call\@object@this#1%
}%
